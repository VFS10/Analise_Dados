# -*- coding: utf-8 -*-
"""Desafio do Módulo 2 - BootCamp-Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nnpp5hg5lDtgBRFd5vNADBmqO7uhu3Hm
"""

#import library
import pandas as pd
import numpy as np

#reading archive CSV Web
df = pd.read_csv ("https://pycourse.s3.amazonaws.com/bike-sharing.csv")

#Viewing DataSet CSV
print(df)

#returning dataframe size
df.shape

#information df
df.info

#Index Descryption 
df.index

#returning columns 
df.columns

#media by colmuns df
df.median()

#Orderning small of Big 
df.sort_values

#Ordendo por Datetime
df.groupby(by="datetime")

# seting Datetime how index
df.set_index('datetime')

#Returning in df all rows referring the yars 2011
df [df['datetime'] < '2012-01-01']

#Returning in df all rows referring the yars 2012
df [df['datetime'] > '2011-12-31']

#Identificando colunas
df.columns

#Definindo Index
df.set_index('year')

df [df['year'] == 0]

df.index

#Definindo index year
df.set_index = ('year')

#criando novoDF para o ano 2011
df2011 = df[df['year'] == 0]

#Visualizando DTframe
df2011

#Somando valores de biciclietas alugadas em 2011
df2011.total_count.sum()

#Criando novoDF para 2012
df2012 = df[df['year']== 1]

#Visualizando
df2012

df2012.total_count.sum()

#Criando DFinverno
station_iver = df[df['season'] == 1]

#Visualizando DFinverno
station_iver

#Criando DFprimavera
station_prim = df[df['season'] == 2]

#Visualizando DFPrimavera
station_prim

#Criando DFVerão
station_ver =df[df['season'] == 3]

#Visualizando DFVerão
station_ver

#Criando DFOutono
station_out = df[df['season'] == 4]

#Visualizando DFoutono
station_out

station_iver.median()

station_prim.median()

station_ver.median()

station_out.median()

df.head()

#Criando Dataframe/h
hora0 = df[df['hour'] == 0]
hora1 = df[df['hour'] ==1 ]
hora2 = df[df['hour'] ==2 ]
hora3 = df[df['hour'] ==3 ]
hora4 = df[df['hour'] ==4 ]
hora5 = df[df['hour'] ==5 ]
hora6 = df[df['hour'] ==6 ]
hora7 = df[df['hour'] ==7 ]
hora8 = df[df['hour'] ==8 ]
hora9 = df[df['hour'] ==9 ]
hora10 = df[df['hour'] ==10 ]
hora11 = df[df['hour'c  ] ==11 ]
hora12 = df[df['hour'] ==12 ]
hora13 = df[df['hour'] ==13 ]
hora14 = df[df['hour'] ==14 ]
hora15 = df[df['hour'] ==15 ]
hora16 = df[df['hour'] ==16 ]
hora17 = df[df['hour'] ==17 ]
hora18 = df[df['hour'] ==18 ]
hora19 = df[df['hour'] ==19 ]
hora20 = df[df['hour'] ==20 ]
hora21 = df[df['hour'] ==21 ]
hora22 = df[df['hour'] ==22 ]
hora23 = df[df['hour'] ==23 ]



hora0.median()

hora1.median()

hora2.median()

hora3.median()

hora4.median()

hora5.median()

hora6.median()

hora7.median()

hora8.median()

hora9.median()

hora10.median()

hora11.median()

hora12.median()

hora13.median()

hora14.median()

hora15.median()

hora16.median()

hora17.median()

hora18.median()

hora19.median()

hora20.median()

hora21.median()

hora22.median()

hora23.median()

df.describe()

#diasdsemana = df.boxplot(column = ['weekday','total_count'])

domingo = df[df['weekday']==0]
segunda = df[df['weekday']==1]
terca = df[df['weekday']==2]
quarta = df[df['weekday']==3]
quinta = df[df['weekday']==4]
sexta = df[df['weekday']==5]
sabado = df[df['weekday']==6]

domingo.median()

segunda.median()

terca.median()

quarta.median()

quinta.median()

sexta.median()

sabado.median()dia1 = df[['weekday', 'total_count']]
dia1.groupby(by='weekday').mean()

#Entender ---Soma
dia1 = df[['weekday', 'total_count']]
dia1.groupby(by='weekday').mean()

cond = df.loc[(df.index >= '2012-01-01') & (df.index)